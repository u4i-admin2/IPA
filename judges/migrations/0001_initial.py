# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import core_types.utils
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core_types', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BehaviourType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('name', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('name_fa', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('name_en', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name': 'Type of Judicial Behaviour',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CourtAndBranch',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('name', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('name_fa', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('name_en', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name': 'Court And Branch',
                'verbose_name_plural': 'Courts And Branches',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('forename', models.CharField(max_length=255, null=True, verbose_name='First Name', blank=True)),
                ('forename_fa', models.CharField(max_length=255, null=True, verbose_name='First Name', blank=True)),
                ('forename_en', models.CharField(max_length=255, null=True, verbose_name='First Name', blank=True)),
                ('surname', models.CharField(max_length=255, verbose_name='Surname')),
                ('surname_fa', models.CharField(max_length=255, null=True, verbose_name='Surname')),
                ('surname_en', models.CharField(max_length=255, null=True, verbose_name='Surname')),
                ('dob_year', models.IntegerField(null=True, verbose_name='Birth Year (Gregorian)', blank=True)),
                ('dob_month', models.IntegerField(null=True, verbose_name='Birth Month (Gregorian)', blank=True)),
                ('dob_day', models.IntegerField(null=True, verbose_name='Birth Day (Gregorian)', blank=True)),
                ('dob_year_fa', models.IntegerField(null=True, verbose_name='Birth Year (Persian)', blank=True)),
                ('dob_month_fa', models.IntegerField(null=True, verbose_name='Birth Month (Persian)', blank=True)),
                ('dob_day_fa', models.IntegerField(null=True, verbose_name='Birth Day (Persian)', blank=True)),
                ('dob_is_estimate', models.NullBooleanField(verbose_name='Birth Date Is Estimate?')),
                ('picture', models.ImageField(upload_to=b'judge_pics', null=True, verbose_name='Picture', blank=True)),
                ('is_cleric', models.NullBooleanField(default=None, verbose_name='Is Cleric?', choices=[(True, 'Cleric'), (False, 'Not cleric'), (None, 'Unknown')])),
                ('judge_type', models.CharField(blank=True, max_length=1, null=True, verbose_name='Judge Type', choices=[(None, 'Unknown'), (b'research', 'Research'), (b'primary', 'Primary'), (b'appeal', 'Appeal'), (b'supreme', 'Supreme')])),
                ('biography', models.TextField(null=True, verbose_name='Biography', blank=True)),
                ('biography_fa', models.TextField(null=True, verbose_name='Biography', blank=True)),
                ('biography_en', models.TextField(null=True, verbose_name='Biography', blank=True)),
                ('birth_city', models.ForeignKey(verbose_name='Birth Village/City', blank=True, to='core_types.City', null=True)),
                ('birth_province', models.ForeignKey(verbose_name='Birth Province', blank=True, to='core_types.Province', null=True)),
                ('court_and_branch', models.ForeignKey(verbose_name='Court and Branch', blank=True, to='judges.CourtAndBranch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('ethnicity', models.ForeignKey(verbose_name='Ethnicity', blank=True, to='core_types.Ethnicity', null=True)),
            ],
            options={
                'verbose_name': 'Judge',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='JudgeComment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Creation Date')),
                ('comment', models.TextField(verbose_name='Comment Text')),
                ('judge', models.ForeignKey(related_name='comments', to='judges.Judge')),
                ('user', models.ForeignKey(default=core_types.utils.get_request_user, verbose_name='User', to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-created',),
                'abstract': False,
                'verbose_name': 'Conflicts And Considerations',
                'verbose_name_plural': 'Conflicts And Considerations',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='JudgeFile',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('name', models.CharField(max_length=255, verbose_name='File Name')),
                ('name_fa', models.CharField(max_length=255, null=True, verbose_name='File Name')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='File Name')),
                ('description', models.TextField(null=True, verbose_name='Description', blank=True)),
                ('description_fa', models.TextField(null=True, verbose_name='Description', blank=True)),
                ('description_en', models.TextField(null=True, verbose_name='Description', blank=True)),
                ('file', models.FileField(upload_to=b'file_evidence', verbose_name='Data')),
                ('file_thumb', models.ImageField(upload_to=b'file_evidence_thumbnails', null=True, verbose_name='Thumbnail', blank=True)),
                ('file_type', models.CharField(max_length=16, choices=[(b'ruling', 'Ruling'), (b'verdict', 'Verdict'), (b'transcript', 'Transcript'), (b'image', 'Image')])),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('judge', models.ForeignKey(related_name='files', to='judges.Judge')),
                ('updated_by', models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'File Evidence',
                'verbose_name_plural': 'File Evidence',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='JudgePosition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('started_year', models.IntegerField(null=True, verbose_name='Term Started Year (Gregorian)', blank=True)),
                ('started_month', models.IntegerField(null=True, verbose_name='Term Started Month (Gregorian)', blank=True)),
                ('started_day', models.IntegerField(null=True, verbose_name='Term Started Day (Gregorian)', blank=True)),
                ('started_year_fa', models.IntegerField(null=True, verbose_name='Term Started Year (Persian)', blank=True)),
                ('started_month_fa', models.IntegerField(null=True, verbose_name='Term Started Month (Persian)', blank=True)),
                ('started_day_fa', models.IntegerField(null=True, verbose_name='Term Started Day (Persian)', blank=True)),
                ('ended_year', models.IntegerField(null=True, verbose_name='Term Ended Year (Gregorian)', blank=True)),
                ('ended_month', models.IntegerField(null=True, verbose_name='Term Ended Month (Gregorian)', blank=True)),
                ('ended_day', models.IntegerField(null=True, verbose_name='Term Ended Day (Gregorian)', blank=True)),
                ('ended_year_fa', models.IntegerField(null=True, verbose_name='Term Ended Year (Persian)', blank=True)),
                ('ended_month_fa', models.IntegerField(null=True, verbose_name='Term Ended Month (Persian)', blank=True)),
                ('ended_day_fa', models.IntegerField(null=True, verbose_name='Term Ended Day (Persian)', blank=True)),
                ('court_and_branch', models.ForeignKey(verbose_name='Court and Branch', blank=True, to='judges.CourtAndBranch', null=True)),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('judge', models.ForeignKey(related_name='positions', to='judges.Judge')),
            ],
            options={
                'ordering': ('started_year', 'started_month', 'started_day'),
                'verbose_name': 'Former Position',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='JudgeQuote',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('quote', models.CharField(max_length=255, verbose_name='Quote')),
                ('quote_fa', models.CharField(max_length=255, null=True, verbose_name='Quote')),
                ('quote_en', models.CharField(max_length=255, null=True, verbose_name='Quote')),
                ('source', models.CharField(max_length=255, verbose_name='Source')),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('judge', models.ForeignKey(related_name='quotes', to='judges.Judge')),
                ('updated_by', models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Quote Evidence',
                'verbose_name_plural': 'Quote Evidence',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='JudgeSource',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('link', models.URLField(null=True, verbose_name='Link', blank=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(null=True, verbose_name='Description', blank=True)),
                ('related_fields', models.CharField(default=b'', help_text='\n            Comma-separated list of field names this source relates to.\n        ', max_length=255, verbose_name='Related Fields', blank=True)),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('judge', models.ForeignKey(related_name='sources', to='judges.Judge')),
                ('updated_by', models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='JudgeTimeline',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('year', models.IntegerField(null=True, verbose_name='Year Of Event', blank=True)),
                ('month', models.IntegerField(null=True, verbose_name='Month Of Event', blank=True)),
                ('day', models.IntegerField(null=True, verbose_name='Day Of Event', blank=True)),
                ('year_fa', models.IntegerField(null=True, verbose_name='Persian Year Of Event', blank=True)),
                ('month_fa', models.IntegerField(null=True, verbose_name='Persian Month Of Event', blank=True)),
                ('day_fa', models.IntegerField(null=True, verbose_name='Persian Day Of Event', blank=True)),
                ('description', models.TextField(max_length=255, verbose_name='Description')),
                ('description_fa', models.TextField(max_length=255, null=True, verbose_name='Description')),
                ('description_en', models.TextField(max_length=255, null=True, verbose_name='Description')),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('judge', models.ForeignKey(related_name='timeline', to='judges.Judge')),
                ('updated_by', models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Timeline Event',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='JudicialPosition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('name', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('name_fa', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('name_en', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name': 'Judicial Position',
                'verbose_name_plural': 'Judicial Positions',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SentenceType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('name', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('name_fa', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('name_en', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('finality', models.IntegerField(default=0, help_text='Finality of the sentence, i.e. how important this judgement is relative to other judgements made as part of the same arrest. The sentence whose type has the highest finality dictates the ultimate sentence length.', verbose_name='Finality')),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name': 'Sentence Type',
            },
            bases=(models.Model,),
        ),
        migrations.AlterUniqueTogether(
            name='judgesource',
            unique_together=set([('judge', 'name')]),
        ),
        migrations.AddField(
            model_name='judgeposition',
            name='judicial_position',
            field=models.ForeignKey(verbose_name='Judge Type', blank=True, to='judges.JudicialPosition', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='judgeposition',
            name='updated_by',
            field=models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='judge',
            name='judicial_position',
            field=models.ForeignKey(verbose_name='Judge Type', blank=True, to='judges.JudicialPosition', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='judge',
            name='updated_by',
            field=models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True),
            preserve_default=True,
        ),
    ]
