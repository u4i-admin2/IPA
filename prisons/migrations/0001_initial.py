# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import core_types.utils
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Prison',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('name_fa', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='Name')),
                ('address', models.TextField(max_length=255, verbose_name='Address')),
                ('address_fa', models.TextField(max_length=255, null=True, verbose_name='Address')),
                ('address_en', models.TextField(max_length=255, null=True, verbose_name='Address')),
                ('dean_name', models.CharField(max_length=255, null=True, verbose_name='Dean Name', blank=True)),
                ('dean_name_fa', models.CharField(max_length=255, null=True, verbose_name='Dean Name', blank=True)),
                ('dean_name_en', models.CharField(max_length=255, null=True, verbose_name='Dean Name', blank=True)),
                ('dean_email', models.EmailField(max_length=255, null=True, verbose_name='Dean E-mail', blank=True)),
                ('dean_phone', models.CharField(max_length=255, null=True, verbose_name='Dean Telephone', blank=True)),
                ('capacity', models.PositiveIntegerField(null=True, verbose_name='Capacity', blank=True)),
                ('capacity_is_estimate', models.BooleanField(default=False, verbose_name='Estimated Capacity')),
                ('latitude', models.FloatField(null=True, verbose_name='Latitude', blank=True)),
                ('longitude', models.FloatField(null=True, verbose_name='Longitude', blank=True)),
                ('opened_year', models.IntegerField(null=True, verbose_name='Year Of Opening', blank=True)),
                ('opened_month', models.IntegerField(null=True, verbose_name='Month Of Opening', blank=True)),
                ('opened_day', models.IntegerField(null=True, verbose_name='Day Of Opening', blank=True)),
                ('opened_year_fa', models.IntegerField(null=True, verbose_name='Persian Year Of Opening', blank=True)),
                ('opened_month_fa', models.IntegerField(null=True, verbose_name='Persian Month Of Opening', blank=True)),
                ('opened_day_fa', models.IntegerField(null=True, verbose_name='Persian Day Of Opening', blank=True)),
                ('administered_by', models.CharField(blank=True, max_length=8, null=True, verbose_name='Administered By', choices=[(b'moi', 'Ministry of Information'), (b'police', 'Police'), (b'irgc', 'IRGC'), (b'pdotj', 'Prisons Division of the Judiciary')])),
                ('physical_structure', models.TextField(null=True, verbose_name='Physical Structure', blank=True)),
                ('physical_structure_fa', models.TextField(null=True, verbose_name='Physical Structure', blank=True)),
                ('physical_structure_en', models.TextField(null=True, verbose_name='Physical Structure', blank=True)),
                ('size_and_density', models.TextField(null=True, verbose_name='Size And Density', blank=True)),
                ('size_and_density_fa', models.TextField(null=True, verbose_name='Size And Density', blank=True)),
                ('size_and_density_en', models.TextField(null=True, verbose_name='Size And Density', blank=True)),
                ('medicine_and_nutrition', models.TextField(null=True, verbose_name='Medicine And Nutrition', blank=True)),
                ('medicine_and_nutrition_fa', models.TextField(null=True, verbose_name='Medicine And Nutrition', blank=True)),
                ('medicine_and_nutrition_en', models.TextField(null=True, verbose_name='Medicine And Nutrition', blank=True)),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Prison',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PrisonComment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now=True, verbose_name='Creation Date')),
                ('comment', models.TextField(verbose_name='Comment Text')),
                ('prison', models.ForeignKey(related_name='comments', to='prisons.Prison')),
                ('user', models.ForeignKey(default=core_types.utils.get_request_user, verbose_name='User', to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('-created',),
                'abstract': False,
                'verbose_name': 'Conflicts And Considerations',
                'verbose_name_plural': 'Conflicts And Considerations',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PrisonFacility',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('name', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('name_fa', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('name_en', models.CharField(max_length=255, unique=True, null=True, verbose_name='Name', blank=True)),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name': 'Prison Facility',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PrisonFile',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('name', models.CharField(max_length=255, verbose_name='File Name')),
                ('name_fa', models.CharField(max_length=255, null=True, verbose_name='File Name')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='File Name')),
                ('description', models.TextField(null=True, verbose_name='Description', blank=True)),
                ('description_fa', models.TextField(null=True, verbose_name='Description', blank=True)),
                ('description_en', models.TextField(null=True, verbose_name='Description', blank=True)),
                ('file', models.FileField(upload_to=b'file_evidence', verbose_name='Data')),
                ('file_thumb', models.ImageField(upload_to=b'file_evidence_thumbnails', null=True, verbose_name='Thumbnail', blank=True)),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('prison', models.ForeignKey(related_name='files', to='prisons.Prison')),
                ('updated_by', models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'File Evidence',
                'verbose_name_plural': 'File Evidence',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PrisonQuote',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('quote', models.CharField(max_length=255, verbose_name='Quote')),
                ('quote_fa', models.CharField(max_length=255, null=True, verbose_name='Quote')),
                ('quote_en', models.CharField(max_length=255, null=True, verbose_name='Quote')),
                ('source', models.CharField(max_length=255, verbose_name='Source')),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('prison', models.ForeignKey(related_name='quotes', to='prisons.Prison')),
                ('updated_by', models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Quote Evidence',
                'verbose_name_plural': 'Quote Evidence',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PrisonSource',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('link', models.URLField(null=True, verbose_name='Link', blank=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(null=True, verbose_name='Description', blank=True)),
                ('related_fields', models.CharField(default=b'', help_text='\n            Comma-separated list of field names this source relates to.\n        ', max_length=255, verbose_name='Related Fields', blank=True)),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('prison', models.ForeignKey(related_name='sources', to='prisons.Prison')),
                ('updated_by', models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PrisonTimeline',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('is_published', models.BooleanField(default=False, db_index=True, verbose_name='Approved for publishing?')),
                ('year', models.IntegerField(null=True, verbose_name='Year Of Event', blank=True)),
                ('month', models.IntegerField(null=True, verbose_name='Month Of Event', blank=True)),
                ('day', models.IntegerField(null=True, verbose_name='Day Of Event', blank=True)),
                ('year_fa', models.IntegerField(null=True, verbose_name='Persian Year Of Event', blank=True)),
                ('month_fa', models.IntegerField(null=True, verbose_name='Persian Month Of Event', blank=True)),
                ('day_fa', models.IntegerField(null=True, verbose_name='Persian Day Of Event', blank=True)),
                ('description', models.TextField(max_length=255, verbose_name='Description')),
                ('description_fa', models.TextField(max_length=255, null=True, verbose_name='Description')),
                ('description_en', models.TextField(max_length=255, null=True, verbose_name='Description')),
                ('created_by', models.ForeignKey(related_name='+', default=core_types.utils.get_request_user, blank=True, to=settings.AUTH_USER_MODEL, null=True, verbose_name='Created By')),
                ('prison', models.ForeignKey(related_name='timeline', to='prisons.Prison')),
                ('updated_by', models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Timeline Event',
            },
            bases=(models.Model,),
        ),
        migrations.AlterUniqueTogether(
            name='prisonsource',
            unique_together=set([('prison', 'name')]),
        ),
        migrations.AddField(
            model_name='prison',
            name='facilities',
            field=models.ManyToManyField(to='prisons.PrisonFacility', null=True, verbose_name='Prison Facility', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='prison',
            name='updated_by',
            field=models.ForeignKey(related_name='+', verbose_name='Last Updated By', blank=True, to=settings.AUTH_USER_MODEL, null=True),
            preserve_default=True,
        ),
    ]
